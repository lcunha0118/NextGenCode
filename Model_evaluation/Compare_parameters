#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec  6 11:32:28 2021

@author: west
"""


"""

author: lcunha

Function to generate namelist file for NOAH-modular surface bmi
https://github.com/NOAA-OWP/noah-mp-modular

Reads hydrofabrics
Alter specific parameters
 
"""

import pandas as pd
import os
import geopandas as gp
import glob

# for example
Hyd_folder="/home/west/Projects/CAMELS/PerBasin4/"
CAMELS_list_516="/home/west/Projects/CAMELS/camels_basin_list_516.txt"
CAMELS_516=pd.read_csv(CAMELS_list_516,dtype={'hru_id': str})
CAMELS_516=CAMELS_516.set_index(['hru_id'])   


outputfolder='/home/west/Projects/CAMELS/PerBasin4/data_CAMELS/'


for i in range (516,len(CAMELS_516)):    
    hru_id=CAMELS_516.index[i]
    hru_id='HUC01'
    catchments=outputfolder+"/"+hru_id+'/spatial/catchment_data.geojson'
    CFE_Config=outputfolder+"/"+hru_id+'/CFE/'
    Param_all=pd.DataFrame()
    for index,row in zones.iterrows():
        catstr=row[0]

        DatFile=os.path.join(CFE_Config,catstr+"_bmi_config_cfe_pass.txt")
        
        Param_temp=pd.read_csv(DatFile,delimiter="=",header=0,index_col=0)
        Param_temp=Param_temp.rename(columns={'BMI':catstr})
        Param_all=pd.concat([Param_all,Param_temp],axis=1)


                    
                    f.write("%s" %("forcing_file=BMI\n"))
                    f.write("%s" %("surface_partitioning_scheme=Schaake\n"))
                    f.write("%s" %("soil_params.depth=2.0\n"))
                    f.write("%s" %("soil_params.b="+str(soil_params.loc[cat]['bexp_soil_layers_stag=1_Time=1'])+"\n"))
                    # This parameter (LKSATFAC) needs to be added when the file Fulldom_CONUS_FullRouting.csv is added to the hydrofabrics               
                    f.write("%s" %("soil_params.mult=1000.0\n"))
                    f.write("%s" %("soil_params.satdk="+str(soil_params.loc[cat]['dksat_soil_layers_stag=1_Time=1'])+"\n"))
                    f.write("%s" %("soil_params.satpsi="+str(soil_params.loc[cat]['psisat_soil_layers_stag=1_Time=1'])+"\n"))
                    f.write("%s" %("soil_params.slop="+str(soil_params.loc[cat]['slope_Time=1'])+"\n"))
                    f.write("%s" %("soil_params.smcmax="+str(soil_params.loc[cat]['smcmax_soil_layers_stag=1_Time=1'])+"\n"))
                    f.write("%s" %("soil_params.wltsmc="+str(soil_params.loc[cat]['smcwlt_soil_layers_stag=1_Time=1'])+"\n"))
                    f.write("%s" %("refkdt="+str(soil_params.loc[cat]['refkdt_Time=1'])+"\n"))
                    f.write("%s" %("max_gw_storage="+str(soil_params.loc[cat]['Zmax'])+"\n"))
                   
                    f.write("%s" %("Cgw="+str(soil_params.loc[cat]['Coeff'])+"\n"))
                    f.write("%s" %("expon="+str(soil_params.loc[cat]['Expon'])+"\n"))
                    f.write("%s" %("gw_storage=1.0%\n"))
                    f.write("%s" %("alpha_fc=0.33\n"))
                    f.write("%s" %("soil_storage=30%\n"))
                    f.write("%s" %("K_nash=0.03\n"))
                    f.write("%s" %("K_lf=0.01\n"))
                    f.write("%s" %("nash_storage=0.0,0.0\n"))
                    f.write("%s" %("num_timesteps=1\n"))
                    f.write("%s" %("verbosity=1\n"))